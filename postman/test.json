{
	"info": {
		"_postman_id": "71d0fb1d-339f-4193-82c7-fd135a7c14be",
		"name": "IO-PUS2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8526404"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8000/auth/registration',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: pm.environment.get(\"request_body\"),",
									"    }",
									"}, function(err, res) {",
									"    pm.test(\"Status code is 400 after second registration\", function () {",
									"        pm.expect(res).to.have.status(400);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"request_body\", pm.request.body.raw)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user01@example.com\",\n    \"password\": \"Password1234!\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"country\": \"US\",\n    \"city\": \"New York\",\n    \"street\": \"Park Avenue\",\n    \"zipCode\": \"10004\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/registration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"request_body\", pm.request.body.raw)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8000/auth/registration/confirm',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: pm.environment.get(\"request_body\"),",
									"    }",
									"}, function(err, res) {",
									"    pm.test(\"Status code is 404 after second activation\", function () {",
									"        pm.expect(res).to.have.status(404);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"zS04CC\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/registration/confirm",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"registration",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response has required properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an(\"object\").that.includes.all.keys(\"accessToken\", \"refreshToken\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user01@example.com\",\n    \"password\": \"Password1234!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response has required properties\", function () {",
									"    pm.expect(pm.response.json()).to.be.an(\"object\").that.includes.all.keys(\"accessToken\", \"refreshToken\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzMDEwOTEwMy03MTc2LTRkZTktYjkzNC0wYWE5ZmNhZGEyZjgiLCJlbWFpbCI6InVzZXIwMkBleGFtcGxlLmNvbSIsImlzcyI6ImxhYl9hcHAiLCJ0eXAiOiJyZWZyZXNoIiwiZXhwIjoxNjg0NDgyNTczfQ.Tjh3c-goJY9W0UodxVW7GGDQXKAMtjpzaDjauq1-H6k\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is valid\", function () {",
							"    let jsonData = pm.response.json();",
							"    let expectedKeys = [\"redis\", \"postgres\", \"mongo\", \"rabbit\"];",
							"",
							"    expectedKeys.forEach(function(key) {",
							"        pm.expect(jsonData.hasOwnProperty(key)).to.be.true;",
							"        pm.expect(jsonData[key]).to.equal(\"ok\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"health"
					]
				}
			},
			"response": []
		}
	]
}